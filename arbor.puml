@startuml

:Администратор:as A
:Специалисты:as SKS
:Рководители:as RKS
:Автоматизаторы:as AMRU


A -up-|> Пользователи
SKS -up-|> Пользователи
RKS-up-|> Пользователи
AMRU-up-|> Пользователи

node Сервер {
package "Веб приложение arbor" as wapp{
(Вход в систему) as login



A ------down-> login
RKS -----down-> login
SKS .....down.>  login
AMRU-----down-> login



package "Доступно для специалиста" as dds{

login ......> dds: Специалист КС в системе не регистрируется !!!!
(просмотр схем процессов)
(возможность скачивать документацию)
}

package "полномочия Руководителя после входа" as prpin{
login-------> prpin
(создание заявок на создание / дороботку процессов)
(отправка заявок в профильнй отдел в отделении)
prpin------>dds
}
package "полномочия администратора после входа" as papin {
login-------> papin
(создание / удаление пользователей, назначениние ролей пользователю)-up->(Панель администратора)
(управление ролями)-up->(Панель администратора)
papin------>dds

}

package "полномочия автоматизаторов МРУ после входа" as pamru {
login-------> pamru
(создание / удаление пользователей, назначениние ролей пользователю)-up->(Панель администратора МРУ)
(просмотр заявок и их отработка)-up->(Панель администратора МРУ)
pamru----left->dds

}



}

package "база данных для веб приложения" as bd{
   database SQLite as "arbor
  -------------------
  База содержит информацию о пользователях, процессах
  "
wapp-----l->bd
bd------>wapp
}




wapp-->[web-сервер]
[python3,  flask - webframework]-->[web-сервер]


@enduml
